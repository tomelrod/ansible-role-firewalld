---
- name: Install firewalld
  package:
    name: firewalld
    state: present

- name: Start and enable firewalld
  service:
    name: firewalld
    state: started
    enabled: yes

- name: Get the current zones
  command: firewall-cmd --permanent --get-zones
  register: fw_zone_list
  changed_when: false

- name: Get the default zone
  command: firewall-cmd --get-default-zone
  register: fw_zone_default
  changed_when: false

- name: Create zones
  command: 'firewall-cmd --permanent --new-zone={{ item.zone }}'
  when: item.zone not in fw_zone_list.stdout.split()
  with_items: "{{ fw_zones }}"
  notify: reload firewalld

- name: Set zone targets
  command: 'firewall-cmd --permanent --zone={{ item.zone }} --set-target={{ item.target | default("default") }}'
  when: item.zone not in fw_zone_list.stdout.split()
  with_items: "{{ fw_zones }}"
  notify: reload firewalld

- name: Set the default zone
  command: "firewall-cmd --set-default-zone={{ fw_default_zone }}"
  when: fw_default_zone != fw_zone_default.stdout
  notify: reload firewalld

- name: Enable services
  firewalld:
    zone: "{{ item.0.zone }}"
    service: "{{ item.1 }}"
    state: enabled
    permanent: true
  with_subelements:
    - "{{ fw_zones | selectattr('services', 'defined') | list }}"
    - services
  notify: reload firewalld

- name: Enable NATing
  firewalld:
    zone: "{{ item.zone }}"
    masquerade: "{{ item.masquerade }}"
    state: enabled
    permanent: true
  when: item.masquerade is defined
  with_items: "{{ fw_zones }}"
  notify: reload firewalld

- name: Add network interfaces to their zones
  firewalld:
    zone: "{{ item.0.zone }}"
    interface: "{{ item.1 }}"
    state: enabled
    permanent: true
  with_subelements:
    - "{{ fw_zones | selectattr('interfaces', 'defined') | list }}"
    - interfaces
  notify: reload firewalld
